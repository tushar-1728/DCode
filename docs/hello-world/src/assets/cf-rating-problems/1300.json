[
{
    "contestId": 1948,
    "index": "C",
    "name": "Arrow Path",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1945,
    "index": "D",
    "name": "Seraphim the Owl",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1943,
    "index": "A",
    "name": "MEX Game 1",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1300,
    "tags": [
        "games",
        "greedy"
    ]
},
{
    "contestId": 1937,
    "index": "B",
    "name": "Binary Path",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1931,
    "index": "D",
    "name": "Divisible Pairs",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "combinatorics",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1927,
    "index": "D",
    "name": "Find the Different Ones!",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "dsu",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1926,
    "index": "D",
    "name": "Vlad and Division",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "bitmasks",
        "greedy"
    ]
},
{
    "contestId": 1922,
    "index": "C",
    "name": "Closest Cities",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1915,
    "index": "E",
    "name": "Romantic Glasses",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "data structures",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1913,
    "index": "C",
    "name": "Game with Multiset",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "greedy"
    ]
},
{
    "contestId": 1902,
    "index": "C",
    "name": "Insert and Equalize",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1900,
    "index": "C",
    "name": "Anji's Binary Tree",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1300,
    "tags": [
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1899,
    "index": "E",
    "name": "Queue Sort",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1899,
    "index": "D",
    "name": "Yarik and Musical Notes",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "hashing",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1889,
    "index": "A",
    "name": "Qingshan Loves Strings 2",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1300,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1882,
    "index": "B",
    "name": "Sets and Union",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1881,
    "index": "D",
    "name": "Divide and Equalize",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1879,
    "index": "C",
    "name": "Make it Alternating",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "combinatorics",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1873,
    "index": "F",
    "name": "Money Trees",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "binary search",
        "greedy",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1870,
    "index": "C",
    "name": "Colorful Table",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1300,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "implementation",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1868,
    "index": "A",
    "name": "Fill in the Matrix",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1300,
    "tags": [
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 1867,
    "index": "C",
    "name": "Salyg1n and the MEX Game",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1300,
    "tags": [
        "constructive algorithms",
        "data structures",
        "games",
        "greedy",
        "interactive"
    ]
},
{
    "contestId": 1864,
    "index": "C",
    "name": "Divisor Chain",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1300,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1862,
    "index": "D",
    "name": "Ice Cream Balls",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "binary search",
        "combinatorics",
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 1857,
    "index": "D",
    "name": "Strong Vertices",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "math",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1851,
    "index": "D",
    "name": "Prefix Permutation Sums",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 1850,
    "index": "F",
    "name": "We Were Both Children",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "brute force",
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1846,
    "index": "E1",
    "name": "Rudolf and Snowflakes (simple version)",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "brute force",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1844,
    "index": "C",
    "name": "Particles",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1300,
    "tags": [
        "dp",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1839,
    "index": "C",
    "name": "Insert Zero and Invert Prefix",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1300,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1829,
    "index": "F",
    "name": "Forever Winter",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "dfs and similar",
        "graphs",
        "math"
    ]
},
{
    "contestId": 1826,
    "index": "C",
    "name": "Dreaming of Freedom",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1300,
    "tags": [
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1823,
    "index": "C",
    "name": "Strongly Composite",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1300,
    "tags": [
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1821,
    "index": "C",
    "name": "Tear It Apart",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "brute force",
        "implementation",
        "math",
        "strings"
    ]
},
{
    "contestId": 1819,
    "index": "A",
    "name": "Constructive Problem",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1300,
    "tags": [
        "brute force",
        "greedy"
    ]
},
{
    "contestId": 1815,
    "index": "A",
    "name": "Ian and Array Sorting",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1300,
    "tags": [
        "greedy",
        "math"
    ]
},
{
    "contestId": 1810,
    "index": "C",
    "name": "Make It Permutation",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "brute force",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1807,
    "index": "E",
    "name": "Interview",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "binary search",
        "implementation",
        "interactive"
    ]
},
{
    "contestId": 1794,
    "index": "C",
    "name": "Scoring Subsequences",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1300,
    "tags": [
        "binary search",
        "greedy",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1788,
    "index": "C",
    "name": "Matching Numbers",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1300,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1786,
    "index": "B",
    "name": "Cake Assembly Line",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "brute force",
        "sortings"
    ]
},
{
    "contestId": 1778,
    "index": "B",
    "name": "The Forbidden Permutation",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "greedy",
        "math"
    ]
},
{
    "contestId": 1776,
    "index": "H",
    "name": "Beppa and SwerChat",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "two pointers"
    ]
},
{
    "contestId": 1775,
    "index": "B",
    "name": "Gardener and the Array",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "bitmasks",
        "constructive algorithms"
    ]
},
{
    "contestId": 1774,
    "index": "C",
    "name": "Ice and Fire",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1300,
    "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1769,
    "index": "C2",
    "name": "\u041f\u043e\u0434\u043a\u0440\u0443\u0442\u043a\u0430 II",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "*special",
        "dp"
    ]
},
{
    "contestId": 1768,
    "index": "C",
    "name": "Elemental Decompress",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1300,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1766,
    "index": "C",
    "name": "Hamiltonian Wall",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1753,
    "index": "A1",
    "name": "Make Nonzero Sum (easy version)",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1300,
    "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1746,
    "index": "C",
    "name": "Permutation Operations",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1741,
    "index": "D",
    "name": "Masha and a Beautiful Tree",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "dfs and similar",
        "divide and conquer",
        "graphs",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1737,
    "index": "B",
    "name": "Ela's Fitness and the Luxury Number",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "binary search",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1736,
    "index": "C1",
    "name": "Good Subarrays (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1300,
    "tags": [
        "binary search",
        "data structures",
        "schedules",
        "two pointers"
    ]
},
{
    "contestId": 1733,
    "index": "C",
    "name": "Parity Shuffle Sorting",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1300,
    "tags": [
        "constructive algorithms",
        "sortings"
    ]
},
{
    "contestId": 1726,
    "index": "C",
    "name": "Jatayu's Balanced Bracket Sequence",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1300,
    "tags": [
        "data structures",
        "dsu",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1717,
    "index": "C",
    "name": "Madoka and Formal Statement",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1300,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1711,
    "index": "B",
    "name": "Party",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "brute force",
        "graphs"
    ]
},
{
    "contestId": 1703,
    "index": "F",
    "name": "Yet Another Problem About Pairs Satisfying an Inequality",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1698,
    "index": "C",
    "name": "3SUM Closure",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "brute force",
        "data structures"
    ]
},
{
    "contestId": 1693,
    "index": "A",
    "name": "Directional Increase",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1300,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1692,
    "index": "F",
    "name": "3SUM",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 1676,
    "index": "G",
    "name": "White-Black Balanced Subtrees",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1676,
    "index": "F",
    "name": "Longest Strike",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1675,
    "index": "D",
    "name": "Vertical Paths",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "graphs",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1669,
    "index": "H",
    "name": "Maximal AND",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "bitmasks",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1667,
    "index": "A",
    "name": "Make it Increasing",
    "type": "PROGRAMMING",
    "points": 250.0,
    "rating": 1300,
    "tags": [
        "brute force",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1661,
    "index": "B",
    "name": "Getting Zero",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "shortest paths"
    ]
},
{
    "contestId": 1660,
    "index": "C",
    "name": "Get an Even String",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "dp",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1659,
    "index": "B",
    "name": "Bit Flipping",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1300,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1650,
    "index": "D",
    "name": "Twist the Permutation",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1649,
    "index": "B",
    "name": "Game of Ball Passing",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1647,
    "index": "C",
    "name": "Madoka and Childish Pranks",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1300,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1638,
    "index": "C",
    "name": "Inversion Graph",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1300,
    "tags": [
        "data structures",
        "dsu",
        "graphs",
        "math"
    ]
},
{
    "contestId": 1627,
    "index": "B",
    "name": "Not Sitting",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1300,
    "tags": [
        "games",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1618,
    "index": "D",
    "name": "Array and Operations",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1617,
    "index": "C",
    "name": "Paprika and Permutation",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1300,
    "tags": [
        "binary search",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1615,
    "index": "B",
    "name": "And It's Non-Zero",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "bitmasks",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1612,
    "index": "C",
    "name": "Chat Ban",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "binary search",
        "math"
    ]
},
{
    "contestId": 1607,
    "index": "D",
    "name": "Blue-Red Permutation",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1603,
    "index": "A",
    "name": "Di-visible Confusion",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1300,
    "tags": [
        "constructive algorithms",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1601,
    "index": "A",
    "name": "Array Elimination",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1300,
    "tags": [
        "bitmasks",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1594,
    "index": "E1",
    "name": "Rubik's Cube Coloring (easy version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 1585,
    "index": "C",
    "name": "Minimize Distance",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1300,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1574,
    "index": "C",
    "name": "Slay the Dragon",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "binary search",
        "greedy",
        "sortings",
        "ternary search"
    ]
},
{
    "contestId": 1571,
    "index": "B",
    "name": "Epic Novel",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "*special",
        "math"
    ]
},
{
    "contestId": 1561,
    "index": "C",
    "name": "Deep Down Below",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1300,
    "tags": [
        "binary search",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1560,
    "index": "D",
    "name": "Make a Power of Two",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "greedy",
        "math",
        "strings"
    ]
},
{
    "contestId": 1558,
    "index": "A",
    "name": "Charmed by the Game",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1300,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 1556,
    "index": "B",
    "name": "Take Your Places!",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 1555,
    "index": "C",
    "name": "Coin Rows",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1555,
    "index": "B",
    "name": "Two Tables",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "brute force"
    ]
},
{
    "contestId": 1553,
    "index": "B",
    "name": "Reverse String",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1300,
    "tags": [
        "brute force",
        "dp",
        "hashing",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 1547,
    "index": "D",
    "name": "Co-growing Sequence",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1538,
    "index": "C",
    "name": "Number of Pairs",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "binary search",
        "data structures",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1534,
    "index": "C",
    "name": "Little Alawn's Puzzle",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1300,
    "tags": [
        "combinatorics",
        "dp",
        "dsu",
        "graphs",
        "math"
    ]
},
{
    "contestId": 1521,
    "index": "B",
    "name": "Nastia and a Good Array",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "constructive algorithms",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1498,
    "index": "B",
    "name": "Box Fitting",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1493,
    "index": "B",
    "name": "Planet Lapituletti",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1300,
    "tags": [
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 1476,
    "index": "B",
    "name": "Inflation",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1470,
    "index": "A",
    "name": "Strange Birthday Party",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1300,
    "tags": [
        "binary search",
        "dp",
        "greedy",
        "sortings",
        "two pointers"
    ]
}
]
