[
{
    "contestId": 1943,
    "index": "F",
    "name": "Minimum Hamming Distance",
    "type": "PROGRAMMING",
    "points": 4500.0,
    "rating": 3500,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1930,
    "index": "I",
    "name": "Counting Is Fun",
    "type": "PROGRAMMING",
    "points": 5000.0,
    "rating": 3500,
    "tags": [
        "combinatorics"
    ]
},
{
    "contestId": 1924,
    "index": "F",
    "name": "Anti-Proxy Attendance",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms",
        "dp",
        "interactive",
        "ternary search"
    ]
},
{
    "contestId": 1919,
    "index": "G",
    "name": "Tree LGM",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms",
        "divide and conquer",
        "games",
        "trees"
    ]
},
{
    "contestId": 1916,
    "index": "G",
    "name": "Optimizations From Chelsu",
    "type": "PROGRAMMING",
    "points": 3750.0,
    "rating": 3500,
    "tags": [
        "divide and conquer",
        "dp",
        "number theory",
        "trees"
    ]
},
{
    "contestId": 1909,
    "index": "H",
    "name": "Parallel Swaps Sort",
    "type": "PROGRAMMING",
    "points": 6000.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms",
        "data structures"
    ]
},
{
    "contestId": 1896,
    "index": "H2",
    "name": "Cyclic Hamming (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 3500,
    "tags": [
        "brute force",
        "dp",
        "fft",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1893,
    "index": "E",
    "name": "Cacti Symphony",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 3500,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "dp",
        "graphs"
    ]
},
{
    "contestId": 1889,
    "index": "F",
    "name": "Doremy's Average Tree",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1889,
    "index": "E",
    "name": "Doremy's Swapping Trees",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1876,
    "index": "G",
    "name": "Clubstep",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 3500,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1876,
    "index": "F",
    "name": "Indefinite Clownfish",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 3500,
    "tags": [
        "binary search",
        "graphs"
    ]
},
{
    "contestId": 1874,
    "index": "G",
    "name": "Jellyfish and Inscryption",
    "type": "PROGRAMMING",
    "points": 5000.0,
    "rating": 3500,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1874,
    "index": "F",
    "name": "Jellyfish and OEIS",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1870,
    "index": "H",
    "name": "Standard Graph Problem",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1868,
    "index": "F",
    "name": "LIS?",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1868,
    "index": "E",
    "name": "Min-Sum-Max",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1864,
    "index": "I",
    "name": "Future Dominators",
    "type": "PROGRAMMING",
    "points": 4250.0,
    "rating": 3500,
    "tags": [
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1863,
    "index": "I",
    "name": "Redundant Routes",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1863,
    "index": "H",
    "name": "Goldberg Machine 3",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "dp",
        "trees"
    ]
},
{
    "contestId": 1854,
    "index": "F",
    "name": "Mark and Spaceship",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 3500,
    "tags": [
        "brute force",
        "dp"
    ]
},
{
    "contestId": 1852,
    "index": "F",
    "name": "Panda Meetups",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "dp",
        "flows"
    ]
},
{
    "contestId": 1842,
    "index": "I",
    "name": "Tenzing and Necklace",
    "type": "PROGRAMMING",
    "points": 5000.0,
    "rating": 3500,
    "tags": [
        "divide and conquer",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1835,
    "index": "F",
    "name": "Good Graph",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "bitmasks",
        "dfs and similar",
        "graph matchings",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1835,
    "index": "E",
    "name": "Old Mobile",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 3500,
    "tags": [
        "combinatorics",
        "dp",
        "probabilities"
    ]
},
{
    "contestId": 1830,
    "index": "E",
    "name": "Bully Sort",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "math"
    ]
},
{
    "contestId": 1827,
    "index": "F",
    "name": "Copium Permutation",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1824,
    "index": "E",
    "name": "LuoTianyi and Cartridge",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "trees"
    ]
},
{
    "contestId": 1819,
    "index": "F",
    "name": "Willy-nilly, Crack, Into Release!",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1817,
    "index": "F",
    "name": "Entangled Substrings",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 1815,
    "index": "F",
    "name": "OH NO1 (-2-3-4)",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms",
        "graphs",
        "math"
    ]
},
{
    "contestId": 1804,
    "index": "G",
    "name": "Flow Control",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "dsu",
        "implementation"
    ]
},
{
    "contestId": 1779,
    "index": "H",
    "name": "Olympic Team Building",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "brute force",
        "meet-in-the-middle"
    ]
},
{
    "contestId": 1776,
    "index": "N",
    "name": "Count Permutations",
    "type": "PROGRAMMING",
    "rating": 3500,
    "tags": [
        "math"
    ]
},
{
    "contestId": 1776,
    "index": "E",
    "name": "Crossing the Railways",
    "type": "PROGRAMMING",
    "rating": 3500,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1774,
    "index": "H",
    "name": "Maximum Permutation",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1773,
    "index": "L",
    "name": "Lisa's Sequences",
    "type": "PROGRAMMING",
    "rating": 3500,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1770,
    "index": "H",
    "name": "Koxia, Mahiru and Winter Festival",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1761,
    "index": "G",
    "name": "Centroid Guess",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "interactive",
        "probabilities",
        "trees"
    ]
},
{
    "contestId": 1761,
    "index": "F2",
    "name": "Anti-median (Hard Version)",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 3500,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1753,
    "index": "F",
    "name": "Minecraft Series",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "brute force",
        "two pointers"
    ]
},
{
    "contestId": 1750,
    "index": "H",
    "name": "BinaryStringForces",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1746,
    "index": "G",
    "name": "Olympiad Training",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "flows",
        "geometry",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1740,
    "index": "I",
    "name": "Arranging Crystal Balls",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "divide and conquer",
        "divide and conquer",
        "dp",
        "geometry",
        "graphs",
        "number theory"
    ]
},
{
    "contestId": 1737,
    "index": "G",
    "name": "Ela Takes Dancing Class",
    "type": "PROGRAMMING",
    "points": 3750.0,
    "rating": 3500,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 1726,
    "index": "H",
    "name": "Mainak and the Bleeding Polygon",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "binary search",
        "geometry",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1718,
    "index": "E",
    "name": "Impressionism",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms",
        "graphs",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1707,
    "index": "F",
    "name": "Bugaboo",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 3500,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "number theory"
    ]
},
{
    "contestId": 1707,
    "index": "E",
    "name": "Replace",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 3500,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 1704,
    "index": "H2",
    "name": "Game of AI (hard version)",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 3500,
    "tags": [
        "combinatorics",
        "fft",
        "math"
    ]
},
{
    "contestId": 1704,
    "index": "G",
    "name": "Mio and Lucky Array",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms",
        "fft",
        "math",
        "strings"
    ]
},
{
    "contestId": 1696,
    "index": "H",
    "name": "Maximum Product?",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "greedy",
        "implementation",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1687,
    "index": "F",
    "name": "Koishi's Unconscious Permutation",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "fft",
        "math"
    ]
},
{
    "contestId": 1687,
    "index": "E",
    "name": "Become Big For Me",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 3500,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1685,
    "index": "E",
    "name": "The Ultimate LIS Problem",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1685,
    "index": "D2",
    "name": "Permutation Weight (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1677,
    "index": "F",
    "name": "Tokitsukaze and Gems",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "dp",
        "math"
    ]
},
{
    "contestId": 1667,
    "index": "F",
    "name": "Yin Yang",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 1666,
    "index": "H",
    "name": "Heroes of Might",
    "type": "PROGRAMMING",
    "rating": 3500,
    "tags": [
        "math"
    ]
},
{
    "contestId": 1656,
    "index": "I",
    "name": "Neighbour Ordering",
    "type": "PROGRAMMING",
    "points": 4500.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms",
        "graphs"
    ]
},
{
    "contestId": 1654,
    "index": "H",
    "name": "Three Minimums",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "divide and conquer",
        "dp",
        "fft",
        "math"
    ]
},
{
    "contestId": 1648,
    "index": "F",
    "name": "Two Avenues",
    "type": "PROGRAMMING",
    "points": 3750.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 1641,
    "index": "F",
    "name": "Covering Circle",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 1637,
    "index": "H",
    "name": "Minimize Inversions Number",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1628,
    "index": "F",
    "name": "Spaceship Crisis Management",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "binary search",
        "data structures",
        "geometry",
        "sortings"
    ]
},
{
    "contestId": 1621,
    "index": "I",
    "name": "Two Sequences",
    "type": "PROGRAMMING",
    "points": 4500.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "hashing",
        "string suffix structures"
    ]
},
{
    "contestId": 1621,
    "index": "H",
    "name": "Trains and Airplanes",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 1616,
    "index": "G",
    "name": "Just Add an Edge",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs"
    ]
},
{
    "contestId": 1608,
    "index": "G",
    "name": "Alphabetic Tree",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 3500,
    "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "hashing",
        "string suffix structures",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1588,
    "index": "F",
    "name": "Jumping Through the Array",
    "type": "PROGRAMMING",
    "points": 3750.0,
    "rating": 3500,
    "tags": [
        "binary search",
        "data structures",
        "graphs",
        "two pointers"
    ]
},
{
    "contestId": 1586,
    "index": "I",
    "name": "Omkar and Mosaic",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 1578,
    "index": "G",
    "name": "Game of Chance",
    "type": "PROGRAMMING",
    "rating": 3500,
    "tags": [
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1578,
    "index": "C",
    "name": "Cactus Lady and her Cing",
    "type": "PROGRAMMING",
    "rating": 3500,
    "tags": []
},
{
    "contestId": 1545,
    "index": "F",
    "name": "AquaMoon and Potatoes",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "brute force",
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1545,
    "index": "E2",
    "name": "AquaMoon and Time Stop (hard version)",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1545,
    "index": "E1",
    "name": "AquaMoon and Time Stop (easy version)",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1540,
    "index": "E",
    "name": "Tasty Dishes",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "math",
        "matrices"
    ]
},
{
    "contestId": 1534,
    "index": "H",
    "name": "Lost Nodes",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms",
        "dp",
        "graphs",
        "interactive",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1523,
    "index": "H",
    "name": "Hopping Around the Array ",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1517,
    "index": "H",
    "name": "Fly Around the World",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "dp",
        "geometry"
    ]
},
{
    "contestId": 1515,
    "index": "H",
    "name": "Phoenix and Bits",
    "type": "PROGRAMMING",
    "points": 4250.0,
    "rating": 3500,
    "tags": [
        "bitmasks",
        "brute force",
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 1508,
    "index": "F",
    "name": "Optimal Encoding",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "brute force",
        "data structures"
    ]
},
{
    "contestId": 1503,
    "index": "F",
    "name": "Balance the Cards",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms",
        "data structures",
        "divide and conquer",
        "geometry",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1500,
    "index": "F",
    "name": "Cupboards Jumps",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1491,
    "index": "I",
    "name": "Ruler Of The Zoo",
    "type": "PROGRAMMING",
    "points": 5000.0,
    "rating": 3500,
    "tags": [
        "brute force",
        "data structures"
    ]
},
{
    "contestId": 1479,
    "index": "E",
    "name": "School Clubs",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "dp",
        "fft",
        "math",
        "number theory",
        "probabilities"
    ]
},
{
    "contestId": 1477,
    "index": "F",
    "name": "Nezzar and Chocolate Bars",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "combinatorics",
        "fft",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1470,
    "index": "F",
    "name": "Strange Covering",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 3500,
    "tags": [
        "divide and conquer"
    ]
},
{
    "contestId": 1464,
    "index": "F",
    "name": "My Beautiful Madness",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "trees"
    ]
},
{
    "contestId": 1458,
    "index": "F",
    "name": "Range Diameter Sum",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "trees"
    ]
},
{
    "contestId": 1456,
    "index": "E",
    "name": "XOR-ranges",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1450,
    "index": "G",
    "name": "Communism",
    "type": "PROGRAMMING",
    "points": 3750.0,
    "rating": 3500,
    "tags": [
        "bitmasks",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1446,
    "index": "E",
    "name": "Long Recovery",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "constructive algorithms",
        "dfs and similar"
    ]
},
{
    "contestId": 1444,
    "index": "E",
    "name": "Finding the Vertex",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3500,
    "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "interactive",
        "trees"
    ]
},
{
    "contestId": 1439,
    "index": "E",
    "name": "Cheat and Win",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 3500,
    "tags": [
        "bitmasks",
        "data structures",
        "games",
        "trees"
    ]
},
{
    "contestId": 1434,
    "index": "E",
    "name": "A Convex Game",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 3500,
    "tags": [
        "dsu",
        "games"
    ]
},
{
    "contestId": 1428,
    "index": "H",
    "name": "Rotary Laser Lock",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3500,
    "tags": [
        "binary search",
        "interactive"
    ]
},
{
    "contestId": 1427,
    "index": "H",
    "name": "Prison Break",
    "type": "PROGRAMMING",
    "points": 4500.0,
    "rating": 3500,
    "tags": [
        "binary search",
        "games",
        "geometry",
        "ternary search"
    ]
},
{
    "contestId": 1423,
    "index": "N",
    "name": "BubbleSquare Tokens",
    "type": "PROGRAMMING",
    "rating": 3500,
    "tags": []
},
{
    "contestId": 1423,
    "index": "G",
    "name": "Growing flowers",
    "type": "PROGRAMMING",
    "rating": 3500,
    "tags": [
        "data structures"
    ]
}
]
