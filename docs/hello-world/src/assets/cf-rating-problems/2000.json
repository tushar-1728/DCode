[
{
    "contestId": 1943,
    "index": "B",
    "name": "Non-Palindromic Substring",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "hashing",
        "implementation",
        "math",
        "strings"
    ]
},
{
    "contestId": 1941,
    "index": "G",
    "name": "Rudolf and Subway",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1936,
    "index": "B",
    "name": "Pinball",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "implementation",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1931,
    "index": "G",
    "name": "One-Dimensional Puzzle",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1923,
    "index": "E",
    "name": "Count Paths",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1919,
    "index": "H",
    "name": "Tree Diameter",
    "type": "PROGRAMMING",
    "points": 5000.0,
    "rating": 2000,
    "tags": [
        "interactive",
        "trees"
    ]
},
{
    "contestId": 1910,
    "index": "F",
    "name": "Build Railway Stations",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1905,
    "index": "D",
    "name": "Cyclic MEX",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "implementation",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1903,
    "index": "E",
    "name": "Geo Game",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "greedy",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1900,
    "index": "D",
    "name": "Small GCD",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1893,
    "index": "C",
    "name": "Freedom of Choice",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1891,
    "index": "F",
    "name": "A Growing Tree",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 1889,
    "index": "C1",
    "name": "Doremy's Drying Plan (Easy Version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1881,
    "index": "G",
    "name": "Anya and the Mysterious String",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 1872,
    "index": "G",
    "name": "Replace With Product",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1867,
    "index": "E1",
    "name": "Salyg1n and Array (simple version)",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1862,
    "index": "G",
    "name": "The Great Equalizer",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1857,
    "index": "G",
    "name": "Counting Graphs",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "divide and conquer",
        "dsu",
        "graphs",
        "greedy",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1851,
    "index": "G",
    "name": "Vlad and the Mountains",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "dsu",
        "graphs",
        "implementation",
        "sortings",
        "trees",
        "two pointers"
    ]
},
{
    "contestId": 1841,
    "index": "D",
    "name": "Pairs of Segments",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1830,
    "index": "B",
    "name": "The BOSS Can Count Pairs",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 1827,
    "index": "B1",
    "name": "Range Sorting (Easy Version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "dp",
        "dsu",
        "greedy",
        "trees",
        "two pointers"
    ]
},
{
    "contestId": 1815,
    "index": "B",
    "name": "Sum Graph",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "constructive algorithms",
        "graphs",
        "implementation",
        "interactive",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 1804,
    "index": "D",
    "name": "Accommodation",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1796,
    "index": "D",
    "name": "Maximum Subarray",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1788,
    "index": "D",
    "name": "Moving Dots",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "combinatorics",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1783,
    "index": "D",
    "name": "Different Arrays",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1772,
    "index": "F",
    "name": "Copy of a Copy of a Copy",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1770,
    "index": "D",
    "name": "Koxia and Game",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "dsu",
        "flows",
        "games",
        "graph matchings",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1764,
    "index": "D",
    "name": "Doremy's Pegging Game",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1763,
    "index": "C",
    "name": "Another Array Problem",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1753,
    "index": "C",
    "name": "Wish I Knew How to Sort",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1744,
    "index": "F",
    "name": "MEX vs MED",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1741,
    "index": "F",
    "name": "Multi-Colored Segments",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1733,
    "index": "D2",
    "name": "Zero-One (Hard Version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2000,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1731,
    "index": "E",
    "name": "Graph Cost",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dp",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1726,
    "index": "D",
    "name": "Edge Split",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "probabilities",
        "trees"
    ]
},
{
    "contestId": 1725,
    "index": "C",
    "name": "Circular Mirror",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "combinatorics",
        "geometry",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1718,
    "index": "B",
    "name": "Fibonacci Strings",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "greedy",
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1716,
    "index": "D",
    "name": "Chip Move",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "dp",
        "math"
    ]
},
{
    "contestId": 1716,
    "index": "C",
    "name": "Robot in a Hallway",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "ternary search"
    ]
},
{
    "contestId": 1712,
    "index": "D",
    "name": "Empty Graph",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "shortest paths"
    ]
},
{
    "contestId": 1702,
    "index": "G2",
    "name": "Passable Paths (hard version)",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 1696,
    "index": "E",
    "name": "Placing Jinas",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 1690,
    "index": "G",
    "name": "Count the Trains",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1685,
    "index": "B",
    "name": "Linguistics",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "greedy",
        "implementation",
        "sortings",
        "strings"
    ]
},
{
    "contestId": 1682,
    "index": "D",
    "name": "Circular Spanning Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1680,
    "index": "E",
    "name": "Moving Chips",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "bitmasks",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1674,
    "index": "G",
    "name": "Remove Directed Edges",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs"
    ]
},
{
    "contestId": 1674,
    "index": "E",
    "name": "Breaking the Wall",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1672,
    "index": "F1",
    "name": "Array Shuffling",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1665,
    "index": "D",
    "name": "GCD Guess",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "chinese remainder theorem",
        "constructive algorithms",
        "games",
        "interactive",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1657,
    "index": "D",
    "name": "For Gamers. By Gamers.",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1646,
    "index": "D",
    "name": "Weight the Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1641,
    "index": "B",
    "name": "Repetitions Decoding",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1638,
    "index": "D",
    "name": "Big Brush",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1634,
    "index": "D",
    "name": "Finding Zero",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1632,
    "index": "D",
    "name": "New Year Concert",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "math",
        "number theory",
        "two pointers"
    ]
},
{
    "contestId": 1624,
    "index": "F",
    "name": "Interacdive Problem",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 1624,
    "index": "E",
    "name": "Masha-forgetful",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "hashing",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 1622,
    "index": "D",
    "name": "Shuffle",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1620,
    "index": "D",
    "name": "Exact Change",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1619,
    "index": "G",
    "name": "Unusual Minesweeper",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "dfs and similar",
        "dsu",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1619,
    "index": "F",
    "name": "Let's Play the Hat?",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1618,
    "index": "F",
    "name": "Reverse",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "implementation",
        "math",
        "strings"
    ]
},
{
    "contestId": 1616,
    "index": "D",
    "name": "Keep the Average High",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1613,
    "index": "E",
    "name": "Crazy Robot",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 1612,
    "index": "E",
    "name": "Messages",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "probabilities",
        "sortings"
    ]
},
{
    "contestId": 1610,
    "index": "D",
    "name": "Not Quite Lee",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1599,
    "index": "C",
    "name": "Bubble Strike",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "math",
        "probabilities",
        "ternary search"
    ]
},
{
    "contestId": 1584,
    "index": "D",
    "name": "Guess the Permutation",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "combinatorics",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1582,
    "index": "E",
    "name": "Pchelyonok and Segments",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1574,
    "index": "D",
    "name": "The Strongest Build",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "hashing",
        "implementation"
    ]
},
{
    "contestId": 1571,
    "index": "F",
    "name": "Kotlinforces",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special",
        "constructive algorithms",
        "dp"
    ]
},
{
    "contestId": 1567,
    "index": "D",
    "name": "Expression Evaluation Error",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1566,
    "index": "E",
    "name": "Buds Re-hanging",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1558,
    "index": "C",
    "name": "Bottom-Tier Reversals",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1551,
    "index": "E",
    "name": "Fixed Points",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "dp"
    ]
},
{
    "contestId": 1536,
    "index": "D",
    "name": "Omkar and Medians",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1525,
    "index": "C",
    "name": "Robot Collisions",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1521,
    "index": "C",
    "name": "Nastia and a Hidden Permutation",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 1514,
    "index": "D",
    "name": "Cut and Stick",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1513,
    "index": "D",
    "name": "GCD and MST",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dsu",
        "graphs",
        "greedy",
        "number theory",
        "sortings"
    ]
},
{
    "contestId": 1506,
    "index": "G",
    "name": "Maximize the Remaining String",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1506,
    "index": "F",
    "name": "Triangular Paths",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "graphs",
        "math",
        "shortest paths",
        "sortings"
    ]
},
{
    "contestId": 1493,
    "index": "C",
    "name": "K-beautiful Strings",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1487,
    "index": "E",
    "name": "Cheap Dinner",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "data structures",
        "graphs",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1481,
    "index": "D",
    "name": "AB Graph",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "constructive algorithms",
        "graphs",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1458,
    "index": "B",
    "name": "Glass Half Spilled",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1454,
    "index": "E",
    "name": "Number of Simple Paths",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1451,
    "index": "E1",
    "name": "Bitwise Queries (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1438,
    "index": "C",
    "name": "Engineer Artem",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "2-sat",
        "chinese remainder theorem",
        "constructive algorithms",
        "fft",
        "flows"
    ]
},
{
    "contestId": 1431,
    "index": "E",
    "name": "Chess Match",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 1427,
    "index": "D",
    "name": "Unshuffling a Deck",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 1427,
    "index": "C",
    "name": "The Hard Work of Paparazzi",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1426,
    "index": "F",
    "name": "Number of Subsequences",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "dp",
        "strings"
    ]
},
{
    "contestId": 1416,
    "index": "C",
    "name": "XOR Inverse",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "data structures",
        "divide and conquer",
        "dp",
        "greedy",
        "math",
        "sortings",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1416,
    "index": "B",
    "name": "Make Them Equal",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1415,
    "index": "D",
    "name": "XOR-gun",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms"
    ]
},
{
    "contestId": 1408,
    "index": "D",
    "name": "Searchlights",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "implementation",
        "sortings",
        "two pointers"
    ]
}
]
