[
{
    "contestId": 1946,
    "index": "E",
    "name": "Girl Permutation",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1938,
    "index": "E",
    "name": "Duplicates",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": []
},
{
    "contestId": 1926,
    "index": "F",
    "name": "Vlad and Avoiding X",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1921,
    "index": "G",
    "name": "Mischievous Shooter",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures",
        "divide and conquer",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1918,
    "index": "E",
    "name": "ace5 and Task Order",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "divide and conquer",
        "implementation",
        "interactive",
        "probabilities",
        "sortings"
    ]
},
{
    "contestId": 1912,
    "index": "E",
    "name": "Evaluate It and Back Again",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1909,
    "index": "F1",
    "name": "Small Permutation Problem (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1907,
    "index": "G",
    "name": "Lights",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1906,
    "index": "H",
    "name": "Twin Friends",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 1901,
    "index": "E",
    "name": "Compressed Tree",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1898,
    "index": "E",
    "name": "Sofia and Strings",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "greedy",
        "sortings",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1867,
    "index": "E2",
    "name": "Salyg1n and Array (hard version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 1860,
    "index": "D",
    "name": "Balanced String",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1858,
    "index": "D",
    "name": "Trees and Segments",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1854,
    "index": "B",
    "name": "Earn or Unlock",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "dp"
    ]
},
{
    "contestId": 1848,
    "index": "D",
    "name": "Vika and Bonuses",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "brute force",
        "math",
        "ternary search"
    ]
},
{
    "contestId": 1841,
    "index": "E",
    "name": "Fill the Matrix",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "data structures",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1840,
    "index": "G1",
    "name": "In Search of Truth (Easy Version)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "interactive",
        "math",
        "meet-in-the-middle",
        "probabilities"
    ]
},
{
    "contestId": 1840,
    "index": "F",
    "name": "Railguns",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "graphs"
    ]
},
{
    "contestId": 1837,
    "index": "E",
    "name": "Playoff Fixing",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "combinatorics",
        "trees"
    ]
},
{
    "contestId": 1832,
    "index": "E",
    "name": "Combinatorics Problem",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 1822,
    "index": "G2",
    "name": "Magic Triples (Hard Version)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1815,
    "index": "C",
    "name": "Between",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1811,
    "index": "G2",
    "name": "Vlad and the Nice Paths (hard version)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "combinatorics",
        "data structures",
        "dp",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1808,
    "index": "E1",
    "name": "Minibuses on Venus (easy version)",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "divide and conquer",
        "dp"
    ]
},
{
    "contestId": 1806,
    "index": "E",
    "name": "Tree Master",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 1800,
    "index": "G",
    "name": "Symmetree",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "hashing",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1795,
    "index": "E",
    "name": "Explosions?",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1789,
    "index": "D",
    "name": "Serval and Shift-Shift-Shift",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 1788,
    "index": "E",
    "name": "Sum Over Zero",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp"
    ]
},
{
    "contestId": 1784,
    "index": "C",
    "name": "Monsters (hard version)",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1777,
    "index": "E",
    "name": "Edge Reverse",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1776,
    "index": "B",
    "name": "Vittorio Plays with LEGO Bricks",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp",
        "geometry"
    ]
},
{
    "contestId": 1773,
    "index": "B",
    "name": "BinCoin",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "divide and conquer",
        "hashing",
        "implementation",
        "probabilities",
        "trees"
    ]
},
{
    "contestId": 1772,
    "index": "G",
    "name": "Gaining Rating",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "greedy",
        "implementation",
        "math",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1769,
    "index": "D2",
    "name": "\u0418\u0433\u0440\u0430 \u0432 \u0414\u0435\u0432\u044f\u0442\u043a\u0443 II",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special",
        "brute force"
    ]
},
{
    "contestId": 1765,
    "index": "H",
    "name": "Hospital Queue",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "graphs",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1765,
    "index": "F",
    "name": "Chemistry Lab",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp",
        "geometry",
        "probabilities"
    ]
},
{
    "contestId": 1763,
    "index": "E",
    "name": "Node Pairs",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "dp",
        "graphs",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1763,
    "index": "D",
    "name": "Valid Bitonic Permutations",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1741,
    "index": "G",
    "name": "Kirill and Company",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "dp",
        "flows",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1737,
    "index": "D",
    "name": "Ela and the Wiring Wizard",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "dp",
        "graphs",
        "greedy",
        "implementation",
        "shortest paths"
    ]
},
{
    "contestId": 1736,
    "index": "D",
    "name": "Equal Binary Subsequences",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "geometry",
        "greedy",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 1730,
    "index": "D",
    "name": "Prefixes and Suffixes",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1721,
    "index": "E",
    "name": "Prefix Function Queries",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dp",
        "hashing",
        "string suffix structures",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1717,
    "index": "E",
    "name": "Madoka and The Best University",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1704,
    "index": "E",
    "name": "Count Seconds",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "graphs",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1695,
    "index": "D1",
    "name": "Tree Queries (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1672,
    "index": "E",
    "name": "notepad.exe",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "interactive"
    ]
},
{
    "contestId": 1670,
    "index": "E",
    "name": "Hemose on the Tree",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 1666,
    "index": "I",
    "name": "Interactive Treasure Hunt",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "geometry",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1666,
    "index": "F",
    "name": "Fancy Stack",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1659,
    "index": "E",
    "name": "AND-MEX Walk",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 1657,
    "index": "E",
    "name": "Star MST",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "graph matchings",
        "math"
    ]
},
{
    "contestId": 1656,
    "index": "E",
    "name": "Equal Tree Sums",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "math",
        "trees"
    ]
},
{
    "contestId": 1650,
    "index": "F",
    "name": "Vitaly and Advanced Useless Algorithms",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1646,
    "index": "E",
    "name": "Power Board",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1641,
    "index": "C",
    "name": "Anonymity Is Important",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dsu",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1635,
    "index": "E",
    "name": "Cars ",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "2-sat",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1630,
    "index": "C",
    "name": "Paint the Middle",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "dp",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1627,
    "index": "E",
    "name": "Not Escaping",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "dp",
        "implementation",
        "shortest paths",
        "two pointers"
    ]
},
{
    "contestId": 1622,
    "index": "E",
    "name": "Math Test",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "greedy"
    ]
},
{
    "contestId": 1618,
    "index": "G",
    "name": "Trader Problem",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "data structures",
        "dsu",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1616,
    "index": "E",
    "name": "Lexicographically Small Enough",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1615,
    "index": "D",
    "name": "X(or)-mas Tree",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1607,
    "index": "H",
    "name": "Banquet Preparations 2",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1607,
    "index": "G",
    "name": "Banquet Preparations 1",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1593,
    "index": "G",
    "name": "Changing Brackets",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1583,
    "index": "E",
    "name": "Moment of Bloom",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graph matchings",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1580,
    "index": "C",
    "name": "Train Maintenance",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 1579,
    "index": "G",
    "name": "Minimal Coverage",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1575,
    "index": "K",
    "name": "Knitting Batik",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 1575,
    "index": "H",
    "name": "Holiday Wall Ornaments",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 1575,
    "index": "G",
    "name": "GCD Festival",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1567,
    "index": "E",
    "name": "Non-Decreasing Dilemma",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "divide and conquer",
        "math"
    ]
},
{
    "contestId": 1562,
    "index": "D2",
    "name": "Two Hundred Twenty One (hard version)",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "math"
    ]
},
{
    "contestId": 1559,
    "index": "E",
    "name": "Mocha and Stars",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1557,
    "index": "D",
    "name": "Ezzat and Grid",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1556,
    "index": "E",
    "name": "Equilibrium",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1552,
    "index": "F",
    "name": "Telepanting",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "sortings"
    ]
},
{
    "contestId": 1551,
    "index": "F",
    "name": "Equidistant Vertices",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "combinatorics",
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1543,
    "index": "D2",
    "name": "RPD and Rap Sheet (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1542,
    "index": "D",
    "name": "Priority Queue",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math",
        "ternary search"
    ]
},
{
    "contestId": 1537,
    "index": "F",
    "name": "Figure Fixing",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1537,
    "index": "E2",
    "name": "Erase and Extend (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "hashing",
        "string suffix structures",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1535,
    "index": "E",
    "name": "Gold Transfer",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "interactive",
        "trees"
    ]
},
{
    "contestId": 1526,
    "index": "D",
    "name": "Kill Anton",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "data structures",
        "math",
        "strings"
    ]
},
{
    "contestId": 1520,
    "index": "G",
    "name": "To Go Or Not To Go?",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "greedy",
        "implementation",
        "shortest paths"
    ]
},
{
    "contestId": 1520,
    "index": "F2",
    "name": "Guess the K-th Zero (Hard version)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "interactive"
    ]
},
{
    "contestId": 1515,
    "index": "E",
    "name": "Phoenix and Computers",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1505,
    "index": "I",
    "name": "Mysterious language again, seriously?",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 1505,
    "index": "F",
    "name": "Math",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special",
        "math"
    ]
},
{
    "contestId": 1503,
    "index": "C",
    "name": "Travelling Salesman Problem",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "shortest paths",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1500,
    "index": "B",
    "name": "Two chandeliers",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "brute force",
        "chinese remainder theorem",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1498,
    "index": "E",
    "name": "Two Houses",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "graphs",
        "greedy",
        "interactive",
        "sortings"
    ]
},
{
    "contestId": 1498,
    "index": "D",
    "name": "Bananas in a Microwave",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1488,
    "index": "E",
    "name": "Palindromic Doubles",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special",
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1486,
    "index": "E",
    "name": "Paired Payment",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "dp",
        "flows",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1485,
    "index": "D",
    "name": "Multiples and Power Differences",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "graphs",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1477,
    "index": "C",
    "name": "Nezzar and Nice Beatmap",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "geometry",
        "greedy",
        "math",
        "sortings"
    ]
}
]
