[
{
    "contestId": 1945,
    "index": "C",
    "name": "Left and Right Houses",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "brute force"
    ]
},
{
    "contestId": 1941,
    "index": "D",
    "name": "Rudolf and the Ball Game",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "dfs and similar",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1935,
    "index": "B",
    "name": "Informatics in MAC",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1934,
    "index": "B",
    "name": "Yet Another Coin Problem",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1933,
    "index": "D",
    "name": "Turtle Tenacity: Continual Mods",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "number theory",
        "sortings"
    ]
},
{
    "contestId": 1928,
    "index": "B",
    "name": "Equalize",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "binary search",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1926,
    "index": "C",
    "name": "Vlad and a Sum of Sum of Digits",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1925,
    "index": "B",
    "name": "A Balanced Problemset?",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "brute force",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1922,
    "index": "B",
    "name": "Forming Triangles",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1916,
    "index": "C",
    "name": "Training Before the Olympiad",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "games",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1914,
    "index": "D",
    "name": "Three Activities",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1909,
    "index": "B",
    "name": "Make Almost Equal With Mod",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1907,
    "index": "C",
    "name": "Removal of Unattractive Pairs",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "strings"
    ]
},
{
    "contestId": 1903,
    "index": "B",
    "name": "StORage room",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1886,
    "index": "B",
    "name": "Fear of the Dark",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "binary search",
        "geometry",
        "math"
    ]
},
{
    "contestId": 1881,
    "index": "C",
    "name": "Perfect Square",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 1877,
    "index": "C",
    "name": "Joyboard",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1200,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1874,
    "index": "A",
    "name": "Jellyfish and Game",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1200,
    "tags": [
        "brute force",
        "games",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1872,
    "index": "D",
    "name": "Plus Minus Permutation",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "math"
    ]
},
{
    "contestId": 1870,
    "index": "B",
    "name": "Friendly Arrays",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1200,
    "tags": [
        "bitmasks",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1860,
    "index": "B",
    "name": "Fancy Coins",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1859,
    "index": "C",
    "name": "Another Permutation Problem",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1200,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1857,
    "index": "C",
    "name": "Assembly via Minimums",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1853,
    "index": "B",
    "name": "Fibonaccharsis",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "binary search",
        "brute force",
        "math"
    ]
},
{
    "contestId": 1848,
    "index": "B",
    "name": "Vika and the Bridge",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "implementation",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1846,
    "index": "D",
    "name": "Rudolph and Christmas Tree",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "geometry",
        "math"
    ]
},
{
    "contestId": 1846,
    "index": "C",
    "name": "Rudolf and the Another Competition",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1843,
    "index": "D",
    "name": "Apple Tree",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "dp",
        "math",
        "trees"
    ]
},
{
    "contestId": 1834,
    "index": "C",
    "name": "Game with Reversing",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1200,
    "tags": [
        "games",
        "greedy",
        "math",
        "strings"
    ]
},
{
    "contestId": 1832,
    "index": "C",
    "name": "Contrast Value",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1826,
    "index": "A",
    "name": "Trust Nobody",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1200,
    "tags": [
        "brute force",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1822,
    "index": "D",
    "name": "Super-Permutation",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 1808,
    "index": "B",
    "name": "Playing in a Casino",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "math",
        "sortings"
    ]
},
{
    "contestId": 1800,
    "index": "D",
    "name": "Remove Two Letters",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "data structures",
        "greedy",
        "hashing",
        "strings"
    ]
},
{
    "contestId": 1799,
    "index": "B",
    "name": "Equalize by Divide",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1793,
    "index": "C",
    "name": "Dora and Search",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "data structures",
        "two pointers"
    ]
},
{
    "contestId": 1792,
    "index": "B",
    "name": "Stand-up Comedian",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "greedy",
        "math"
    ]
},
{
    "contestId": 1790,
    "index": "D",
    "name": "Matryoshkas",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1769,
    "index": "C1",
    "name": "\u041f\u043e\u0434\u043a\u0440\u0443\u0442\u043a\u0430 I",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "*special",
        "brute force",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1763,
    "index": "B",
    "name": "Incinerate",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "implementation",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1747,
    "index": "C",
    "name": "Swap Game",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1200,
    "tags": [
        "games"
    ]
},
{
    "contestId": 1744,
    "index": "D",
    "name": "Divisibility by 2^n",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1742,
    "index": "E",
    "name": "Scuza",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "binary search",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1738,
    "index": "B",
    "name": "Prefix Sum Addicts",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1736,
    "index": "B",
    "name": "Playing with GCD",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1734,
    "index": "C",
    "name": "Removing Smallest Multiples",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1200,
    "tags": [
        "greedy",
        "math"
    ]
},
{
    "contestId": 1730,
    "index": "C",
    "name": "Minimum Notation",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1200,
    "tags": [
        "data structures",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1729,
    "index": "D",
    "name": "Friends and the Restaurant",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1720,
    "index": "C",
    "name": "Corners",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1200,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1713,
    "index": "C",
    "name": "Build Permutation",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "dp",
        "math"
    ]
},
{
    "contestId": 1704,
    "index": "C",
    "name": "Virus",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1200,
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1703,
    "index": "E",
    "name": "Mirror Grid",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 1694,
    "index": "B",
    "name": "Paranoid String",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1692,
    "index": "E",
    "name": "Binary Deque",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "binary search",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1681,
    "index": "C",
    "name": "Double Sort",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1679,
    "index": "B",
    "name": "Stone Age Problem",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 1674,
    "index": "D",
    "name": "A-B-C Sort",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1671,
    "index": "C",
    "name": "Dolce Vita",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1669,
    "index": "G",
    "name": "Fall Down",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "dfs and similar",
        "implementation"
    ]
},
{
    "contestId": 1669,
    "index": "E",
    "name": "2-Letter Strings",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "data structures",
        "math",
        "strings"
    ]
},
{
    "contestId": 1657,
    "index": "C",
    "name": "Bracket Sequence Deletion",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1656,
    "index": "C",
    "name": "Make Equal With Mod",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "math",
        "number theory",
        "sortings"
    ]
},
{
    "contestId": 1650,
    "index": "C",
    "name": "Weight of the System of Nested Segments",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "greedy",
        "hashing",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1647,
    "index": "B",
    "name": "Madoka and the Elegant Gift",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1641,
    "index": "A",
    "name": "Great Sequence",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1200,
    "tags": [
        "brute force",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1637,
    "index": "C",
    "name": "Andrew and Stones",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1200,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1635,
    "index": "C",
    "name": "Differential Sorting",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1619,
    "index": "C",
    "name": "Wrong Addition",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 1613,
    "index": "C",
    "name": "Poisoned Dagger",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "binary search"
    ]
},
{
    "contestId": 1608,
    "index": "B",
    "name": "Build the Permutation",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1598,
    "index": "C",
    "name": "Delete Two Elements",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "data structures",
        "dp",
        "implementation",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1594,
    "index": "C",
    "name": "Make Them Equal",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1200,
    "tags": [
        "brute force",
        "greedy",
        "math",
        "strings"
    ]
},
{
    "contestId": 1592,
    "index": "B",
    "name": "Hemose Shopping",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "dsu",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1583,
    "index": "B",
    "name": "Omkar and Heavenly Tree",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "trees"
    ]
},
{
    "contestId": 1582,
    "index": "C",
    "name": "Grandma Capa Knits a Scarf",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1200,
    "tags": [
        "brute force",
        "data structures",
        "greedy",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1581,
    "index": "B",
    "name": "Diameter of Graph",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1578,
    "index": "E",
    "name": "Easy Scheduling",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 1559,
    "index": "C",
    "name": "Mocha and Hiking",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "graphs"
    ]
},
{
    "contestId": 1553,
    "index": "C",
    "name": "Penalty",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1200,
    "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1546,
    "index": "B",
    "name": "AquaMoon and Stolen String",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "interactive",
        "math"
    ]
},
{
    "contestId": 1541,
    "index": "B",
    "name": "Pleasant Pairs",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "brute force",
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1539,
    "index": "C",
    "name": "Stable Groups",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1200,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1537,
    "index": "C",
    "name": "Challenging Cliffs",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1536,
    "index": "B",
    "name": "Prinzessin der Verurteilung",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "strings"
    ]
},
{
    "contestId": 1530,
    "index": "C",
    "name": "Pursuit",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1527,
    "index": "B1",
    "name": "Palindrome Game (easy version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "games"
    ]
},
{
    "contestId": 1520,
    "index": "D",
    "name": "Same Differences",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "data structures",
        "hashing",
        "math"
    ]
},
{
    "contestId": 1517,
    "index": "B",
    "name": "Morning Jogging",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1514,
    "index": "B",
    "name": "AND 0, Sum Big",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "bitmasks",
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 1512,
    "index": "D",
    "name": "Corrupted Array",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1512,
    "index": "C",
    "name": "A-B Palindrome",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 1510,
    "index": "K",
    "name": "King's Task",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "brute force",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1504,
    "index": "B",
    "name": "Flip the Bits",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1497,
    "index": "C1",
    "name": "k-LCM (easy version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 1497,
    "index": "B",
    "name": "M-arrays",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1200,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1495,
    "index": "A",
    "name": "Diamond Miner",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1200,
    "tags": [
        "geometry",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1491,
    "index": "B",
    "name": "Minimal Cost",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1200,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 1490,
    "index": "D",
    "name": "Permutation Transformation",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "dfs and similar",
        "divide and conquer",
        "implementation"
    ]
},
{
    "contestId": 1487,
    "index": "B",
    "name": "Cat Cycle",
    "type": "PROGRAMMING",
    "rating": 1200,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1485,
    "index": "B",
    "name": "Replace and Keep Sorted",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1200,
    "tags": [
        "dp",
        "implementation",
        "math"
    ]
}
]
