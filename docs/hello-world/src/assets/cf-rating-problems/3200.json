[
{
    "contestId": 1896,
    "index": "G",
    "name": "Pepe Racing",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 3200,
    "tags": [
        "constructive algorithms",
        "implementation",
        "interactive",
        "sortings"
    ]
},
{
    "contestId": 1864,
    "index": "H",
    "name": "Asterism Stream",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3200,
    "tags": [
        "dp",
        "math",
        "matrices"
    ]
},
{
    "contestId": 1861,
    "index": "F",
    "name": "Four Suits",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": [
        "binary search",
        "bitmasks",
        "flows",
        "greedy"
    ]
},
{
    "contestId": 1859,
    "index": "F",
    "name": "Teleportation in Byteland",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3200,
    "tags": [
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "graphs",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 1832,
    "index": "F",
    "name": "Zombies",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": [
        "binary search",
        "dp"
    ]
},
{
    "contestId": 1830,
    "index": "F",
    "name": "The Third Grace",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3200,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1819,
    "index": "E",
    "name": "Roads in E City",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 3200,
    "tags": [
        "interactive",
        "math",
        "probabilities",
        "trees"
    ]
},
{
    "contestId": 1810,
    "index": "G",
    "name": "The Maximum Prefix",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3200,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1799,
    "index": "H",
    "name": "Tree Cutting",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3200,
    "tags": [
        "bitmasks",
        "dfs and similar",
        "dp"
    ]
},
{
    "contestId": 1781,
    "index": "H1",
    "name": "Window Signals (easy version)",
    "type": "PROGRAMMING",
    "points": 3750.0,
    "rating": 3200,
    "tags": []
},
{
    "contestId": 1781,
    "index": "G",
    "name": "Diverse Coloring",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3200,
    "tags": [
        "constructive algorithms",
        "trees"
    ]
},
{
    "contestId": 1776,
    "index": "K",
    "name": "Uniform Chemistry",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": [
        "dp",
        "math"
    ]
},
{
    "contestId": 1774,
    "index": "G",
    "name": "Segment Covering",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 3200,
    "tags": [
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "data structures",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1746,
    "index": "E2",
    "name": "Joking (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 3200,
    "tags": [
        "dp",
        "interactive"
    ]
},
{
    "contestId": 1712,
    "index": "F",
    "name": "Triameter",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3200,
    "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 1704,
    "index": "H1",
    "name": "Game of AI (easy version)",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 3200,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "dp",
        "fft",
        "math"
    ]
},
{
    "contestId": 1672,
    "index": "G",
    "name": "Cross Xor",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 3200,
    "tags": [
        "constructive algorithms",
        "graphs",
        "math",
        "matrices"
    ]
},
{
    "contestId": 1666,
    "index": "K",
    "name": "Kingdom Partition",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": [
        "flows"
    ]
},
{
    "contestId": 1656,
    "index": "H",
    "name": "Equal LCM Subsets",
    "type": "PROGRAMMING",
    "points": 3750.0,
    "rating": 3200,
    "tags": [
        "data structures",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1656,
    "index": "G",
    "name": "Cycle Palindrome",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 3200,
    "tags": [
        "constructive algorithms",
        "graphs",
        "math"
    ]
},
{
    "contestId": 1648,
    "index": "E",
    "name": "Air Reform",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 3200,
    "tags": [
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "dsu",
        "graphs",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1638,
    "index": "F",
    "name": "Two Posters",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 3200,
    "tags": [
        "brute force",
        "data structures",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1621,
    "index": "G",
    "name": "Weighted Increasing Subsequences",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3200,
    "tags": [
        "data structures",
        "dp",
        "math"
    ]
},
{
    "contestId": 1608,
    "index": "F",
    "name": "MEX counting",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 3200,
    "tags": [
        "combinatorics",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1603,
    "index": "E",
    "name": "A Perfect Problem",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3200,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1599,
    "index": "E",
    "name": "Two Arrays",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": [
        "data structures",
        "matrices"
    ]
},
{
    "contestId": 1599,
    "index": "D",
    "name": "Bubble Popping",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 1598,
    "index": "G",
    "name": "The Sum of Good Numbers",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": [
        "hashing",
        "math",
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 1584,
    "index": "G",
    "name": "Eligible Segments",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 3200,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 1578,
    "index": "D",
    "name": "Dragon Curve",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 1571,
    "index": "I",
    "name": "Physical Examination",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": [
        "*special",
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 1566,
    "index": "H",
    "name": "Xor-quiz",
    "type": "PROGRAMMING",
    "points": 3750.0,
    "rating": 3200,
    "tags": [
        "constructive algorithms",
        "dp",
        "interactive",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1540,
    "index": "D",
    "name": "Inverse Inversions",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3200,
    "tags": [
        "binary search",
        "brute force",
        "data structures"
    ]
},
{
    "contestId": 1523,
    "index": "G",
    "name": "Try Booking",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 3200,
    "tags": [
        "data structures",
        "divide and conquer"
    ]
},
{
    "contestId": 1519,
    "index": "F",
    "name": "Chests and Keys",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "dp",
        "flows"
    ]
},
{
    "contestId": 1517,
    "index": "F",
    "name": "Reunion",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3200,
    "tags": [
        "combinatorics",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1510,
    "index": "H",
    "name": "Hard Optimization",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1495,
    "index": "E",
    "name": "Qingshan and Daniel",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 3200,
    "tags": [
        "brute force",
        "data structures",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1482,
    "index": "G",
    "name": "Vabank",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3200,
    "tags": [
        "binary search",
        "interactive"
    ]
},
{
    "contestId": 1470,
    "index": "E",
    "name": "Strange Permutation",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 3200,
    "tags": [
        "binary search",
        "combinatorics",
        "data structures",
        "dp",
        "graphs",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1446,
    "index": "F",
    "name": "Line Distance",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3200,
    "tags": [
        "binary search",
        "data structures",
        "geometry"
    ]
},
{
    "contestId": 1427,
    "index": "F",
    "name": "Boring Card Game",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 3200,
    "tags": [
        "data structures",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1416,
    "index": "E",
    "name": "Split",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 3200,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1408,
    "index": "I",
    "name": "Bitwise Magic",
    "type": "PROGRAMMING",
    "points": 3750.0,
    "rating": 3200,
    "tags": [
        "dp",
        "math"
    ]
},
{
    "contestId": 1403,
    "index": "C",
    "name": "Chess Rush",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": [
        "*special",
        "combinatorics",
        "dp",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1396,
    "index": "E",
    "name": "Distance Matching",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 3200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 1393,
    "index": "E2",
    "name": "Twilight and Ancient Scroll (harder version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 3200,
    "tags": [
        "dp",
        "hashing",
        "implementation",
        "string suffix structures",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1383,
    "index": "F",
    "name": "Special Edges",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 3200,
    "tags": [
        "flows",
        "graphs"
    ]
},
{
    "contestId": 1368,
    "index": "G",
    "name": "Shifting Dominoes",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3200,
    "tags": [
        "data structures",
        "geometry",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1349,
    "index": "D",
    "name": "Slime and Biscuits",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 3200,
    "tags": [
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1344,
    "index": "F",
    "name": "Piet's Palette",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 3200,
    "tags": [
        "matrices"
    ]
},
{
    "contestId": 1336,
    "index": "D",
    "name": "Yui and Mahjong Set",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 3200,
    "tags": [
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 1326,
    "index": "F2",
    "name": "Wise Men (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 3200,
    "tags": [
        "bitmasks",
        "dp",
        "math"
    ]
},
{
    "contestId": 1286,
    "index": "E",
    "name": "Fedya the Potter Strikes Back",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 3200,
    "tags": [
        "data structures",
        "strings"
    ]
},
{
    "contestId": 1284,
    "index": "F",
    "name": "New Year and Social Network",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3200,
    "tags": [
        "data structures",
        "graph matchings",
        "graphs",
        "math",
        "trees"
    ]
},
{
    "contestId": 1268,
    "index": "D",
    "name": "Invertation in Tournament",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 3200,
    "tags": [
        "brute force",
        "divide and conquer",
        "graphs",
        "math"
    ]
},
{
    "contestId": 1267,
    "index": "H",
    "name": "Help BerLine",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1242,
    "index": "E",
    "name": "Planar Perimeter",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 3200,
    "tags": [
        "constructive algorithms",
        "graphs"
    ]
},
{
    "contestId": 1223,
    "index": "G",
    "name": "Wooden Raft",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 3200,
    "tags": [
        "binary search",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1214,
    "index": "G",
    "name": "Feeling Good",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3200,
    "tags": [
        "bitmasks",
        "data structures"
    ]
},
{
    "contestId": 1210,
    "index": "F2",
    "name": "Marek and Matching (hard version)",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 3200,
    "tags": [
        "brute force",
        "probabilities"
    ]
},
{
    "contestId": 1209,
    "index": "G2",
    "name": "Into Blocks (hard version)",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 3200,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 1184,
    "index": "C3",
    "name": "Heidi and the Turing Test (Hard)",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 1179,
    "index": "E",
    "name": "Alesya and Discrete Math",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 3200,
    "tags": [
        "divide and conquer",
        "interactive"
    ]
},
{
    "contestId": 1149,
    "index": "E",
    "name": "Election Promises",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 3200,
    "tags": [
        "games",
        "graphs"
    ]
},
{
    "contestId": 1142,
    "index": "E",
    "name": "Pink Floyd",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 3200,
    "tags": [
        "graphs",
        "interactive"
    ]
},
{
    "contestId": 1119,
    "index": "H",
    "name": "Triple",
    "type": "PROGRAMMING",
    "points": 3750.0,
    "rating": 3200,
    "tags": [
        "fft",
        "math"
    ]
},
{
    "contestId": 1109,
    "index": "F",
    "name": "Sasha and Algorithm of Silence's Sounds",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3200,
    "tags": [
        "data structures",
        "trees"
    ]
},
{
    "contestId": 1091,
    "index": "H",
    "name": "New Year and the Tricolore Recreation",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3200,
    "tags": [
        "games"
    ]
},
{
    "contestId": 1091,
    "index": "G",
    "name": "New Year and the Factorisation Collaboration",
    "type": "PROGRAMMING",
    "points": 3750.0,
    "rating": 3200,
    "tags": [
        "interactive",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1089,
    "index": "J",
    "name": "JS Minification",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1089,
    "index": "B",
    "name": "Bimatching",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": [
        "graphs"
    ]
},
{
    "contestId": 1081,
    "index": "G",
    "name": "Mergesort Strikes Back",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3200,
    "tags": [
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1056,
    "index": "H",
    "name": "Detect Robots",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3200,
    "tags": [
        "data structures",
        "strings"
    ]
},
{
    "contestId": 1045,
    "index": "E",
    "name": "Ancient civilizations",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": [
        "constructive algorithms",
        "geometry"
    ]
},
{
    "contestId": 1037,
    "index": "H",
    "name": "Security",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3200,
    "tags": [
        "data structures",
        "string suffix structures"
    ]
},
{
    "contestId": 1037,
    "index": "G",
    "name": "A Game on Strings",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3200,
    "tags": [
        "games"
    ]
},
{
    "contestId": 1034,
    "index": "E",
    "name": "Little C Loves 3 III",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 3200,
    "tags": [
        "bitmasks",
        "dp",
        "math"
    ]
},
{
    "contestId": 1025,
    "index": "G",
    "name": "Company Acquisitions",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3200,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 1019,
    "index": "E",
    "name": "Raining season",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 3200,
    "tags": [
        "data structures",
        "divide and conquer",
        "trees"
    ]
},
{
    "contestId": 1017,
    "index": "G",
    "name": "The Tree",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3200,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 1007,
    "index": "D",
    "name": "Ants",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 3200,
    "tags": [
        "2-sat",
        "data structures",
        "trees"
    ]
},
{
    "contestId": 993,
    "index": "F",
    "name": "The Moral Dilemma",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3200,
    "tags": []
},
{
    "contestId": 933,
    "index": "E",
    "name": "A Preponderant Reunion",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 3200,
    "tags": [
        "constructive algorithms",
        "dp"
    ]
},
{
    "contestId": 924,
    "index": "F",
    "name": "Minimal Subset Difference",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3200,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 923,
    "index": "F",
    "name": "Public Service",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3200,
    "tags": [
        "constructive algorithms",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 921,
    "index": "14",
    "name": "Labyrinth-14",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 921,
    "index": "13",
    "name": "Labyrinth-13",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 921,
    "index": "12",
    "name": "Labyrinth-12",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 921,
    "index": "11",
    "name": "Labyrinth-11",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 921,
    "index": "10",
    "name": "Labyrinth-10",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 921,
    "index": "09",
    "name": "Labyrinth-9",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 921,
    "index": "08",
    "name": "Labyrinth-8",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 921,
    "index": "07",
    "name": "Labyrinth-7",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 921,
    "index": "06",
    "name": "Labyrinth-6",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 921,
    "index": "05",
    "name": "Labyrinth-5",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 921,
    "index": "04",
    "name": "Labyrinth-4",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 921,
    "index": "03",
    "name": "Labyrinth-3",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 921,
    "index": "02",
    "name": "Labyrinth-2",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
},
{
    "contestId": 921,
    "index": "01",
    "name": "Labyrinth-1",
    "type": "PROGRAMMING",
    "rating": 3200,
    "tags": []
}
]
